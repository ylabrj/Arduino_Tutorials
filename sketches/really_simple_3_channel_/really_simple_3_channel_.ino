volatile long debounce_time = 0;
volatile long current_time = 0;
volatile float plot_offset = 0.0;




void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);   //Set up serial connection
  // Set up PWM output on pins 9,10 and 11 for different levels.
  // You do it here because once it’s set up, it keeps running.
  // You don’t need it in the main loop so it doesn’t interfere
  // with the measurements.
  // Once it’s running, attached the wire from A0 to each pin to
  // see the square waveform generated by each value,
  
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(9, OUTPUT);
  analogWrite(9,25);
  analogWrite(10,128);
  analogWrite(11,200);

  // Now let's set up a couple of basic digital pins
  pinMode(8, OUTPUT);
  digitalWrite(8, HIGH);
  pinMode(7, OUTPUT);
  digitalWrite(7, LOW);

  // Turn on Pin 13 LED so we see what's happening there.

  pinMode(13, OUTPUT);
  digitalWrite(13, HIGH);

  // Set up Pin 2 for the button and interrupt handler
  // configure pin 2 as an input and enable the internal pull-up resistor
  pinMode(2, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(2),buttonPressed,RISING);
   

  // 
}


void loop() {

  // put your main code here, to run repeatedly:
  float val0 =  (float (analogRead(A0))) / 204.8; //Read analog pin
  float val1 =  ((float (analogRead(A1)))  / 204.8) + plot_offset;
  float val2 =  ((float (analogRead(A2)))  / 204.8) + (plot_offset * 2.0);

  Serial.print(val0);
  Serial.print(" ");
  Serial.print(val1);
  Serial.print(" ");
  Serial.println(val2); // Write analog value to serial port
}

void buttonPressed(){
  current_time = millis();
  if ((current_time - debounce_time) > 100) {

     if (plot_offset == 7){
       plot_offset = 0;
     }
     else { 
       plot_offset = 7;
     }
  } // end if
  debounce_time = current_time;
}
